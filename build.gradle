ext {
    restAssuredVersion = '4.4.0'
    wdmVersion = '5.0.3'
    poiApacheVersion = '5.1.0'
    logbackVersion = '1.2.8'
}

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'idea'

group = 'com.kshyk'
version = '0.5.1'
description = """selenium-kshyk"""

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.github.ben-manes:gradle-versions-plugin:0.39.0"
    }
}
apply plugin: 'com.github.ben-manes.versions'

compileTestJava {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    options.compilerArgs += '-parameters'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    maven { url "https://maven.java.net/content/repositories/staging/" }
    maven { url "https://repo.maven.apache.org/maven2" }
}

dependencies {
    implementation('org.seleniumhq.selenium:selenium-java:4.1.0')
    implementation("ch.qos.logback:logback-classic:${logbackVersion}")
    implementation("ch.qos.logback:logback-core:${logbackVersion}")
    implementation("io.github.bonigarcia:webdrivermanager:${wdmVersion}")
    implementation("org.apache.poi:poi:${poiApacheVersion}")
    implementation("org.apache.poi:poi-ooxml:${poiApacheVersion}")
    implementation('org.javassist:javassist:3.28.0-GA')
    implementation('cglib:cglib-nodep:3.3.0')
    implementation('com.codeborne:selenide:6.1.1')
    implementation('com.testingbot:testingbotrest:1.0.6')
    implementation('org.assertj:assertj-core:3.21.0')
    implementation('org.junit.jupiter:junit-jupiter:5.8.2')
    implementation('io.github.artsok:rerunner-jupiter:2.1.6')
    implementation('org.apache.commons:commons-lang3:3.12.0')
    testImplementation('org.mockito:mockito-core:4.1.0')
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
    reports {
        junitXml.enabled(true)
    }
}